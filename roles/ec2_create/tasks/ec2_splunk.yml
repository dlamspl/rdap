---

- name: Create security group for Splunk
  ec2_group:
    name: "{{ splunk_aws.security_group_name }}"
    description: "{{ splunk_aws.security_group_desc }}"
    region: "{{ region }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
        rule_desc: allow all on port 22
      - proto: tcp
        from_port: 8000
        to_port: 8000
        cidr_ip: 0.0.0.0/0
        rule_desc: allow all on port 8000        
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
        rule_desc: allow all on port 443        
      - proto: tcp
        from_port: 8089
        to_port: 8089
        cidr_ip: 0.0.0.0/0
        rule_desc: allow all on port 8089          
    state: present
  register: security_group

- name: Create Splunk EC2 instance (Default)
  ec2:
    instance_tags:
        Name: "{{ splunk_aws.instance_name_tag }}"
    count_tag: 
        Name: "{{ splunk_aws.instance_name_tag }}"
    volumes:
      - device_name: /dev/sda1
        volume_type: "{{ splunk_aws.disk_type }}"
        volume_size: "{{ splunk_aws.disk_size }}"     
        delete_on_termination: true   
    exact_count: "{{ splunk_aws.count_instances }}"
    group: "{{ splunk_aws.security_group_name }}"
    instance_type: "{{ splunk_aws.instance_type }}"
    key_name: "{{ keypair }}"
    region: "{{ region }}"
    image: "{{ splunk_aws.image_ami_id }}"
    wait: yes
  register: ec2
  when: splunk_aws.disk_type != "io1"

  
- name: Create Splunk EC2 instance "{{ splunk_aws.iops }}" IOPS
  ec2:
    instance_tags:
        Name: "{{ splunk_aws.instance_name_tag }}"
    count_tag: 
        Name: "{{ splunk_aws.instance_name_tag }}"
    volumes:
      - device_name: /dev/sda1
        volume_type: "{{ splunk_aws.disk_type }}"
        volume_size: "{{ splunk_aws.disk_size }}"   
        iops: "{{ splunk_aws.iops }}"
        delete_on_termination: true   
    exact_count: "{{ splunk_aws.count_instances }}"
    group: "{{ splunk_aws.security_group_name }}"
    instance_type: "{{ splunk_aws.instance_type }}"
    key_name: "{{ keypair }}"
    region: "{{ region }}"
    image: "{{ splunk_aws.image_ami_id }}"
    wait: yes
  register: ec2_iops
  when: splunk_aws.disk_type == "io1"
  

# - name: DEBUG
#   debug: var=item
#   with_items: "{{ ec2.tagged_instances }}"

# - name: Gather facts about the launched instances
#   ec2_instance_facts:
#     aws_access_key: "{{ aws_access_key }}"
#     aws_secret_key: "{{ aws_secret_key }}"
#     filters:
#       "tag:Name": SplunkServerBOTO

#   register: ec2_info
# - name: Wait for port 22 to be ready
#   hosts: [splunk_servers]
#   gather_facts: False
#   tasks:
#     - local_action: wait_for port=22 host="{{ item.public_ip }}"  search_regex=OpenSSH delay=10

# - name: Wait for SSH to come up
#   delegate_to: "{{ item.public_ip }}"
#   wait_for_connection:
#     delay: 60
#     timeout: 320
#   with_items: "{{ ec2.tagged_instances }}"
#   when: ec2.changed

# - name: Wait for SSH to come up
#   delegate_to: "{{ item.public_ip }}"
#   wait_for_connection:
#     delay: 60
#     timeout: 320
#   with_items: "{{ ec2_iops.tagged_instances }}"
#   when: ec2_iops.changed

# - name: Wait for SSH to come up
#   local_action: wait_for 
#                 host={{ item.public_ip }} 
#                 port=22 
#                 state=started
#   with_items: "{{ ec2.tagged_instances }}"
#   when: ec2.changed

# - name: Wait for SSH to come up
#   local_action: wait_for 
#                 host={{ item.public_ip }} 
#                 port=22 
#                 state=started
#   with_items: "{{ ec2_iops.tagged_instances }}"
#   when: ec2_iops.changed

- name: Add the newly created Splunk EC2 instance(s) to hosts group
  ini_file:
    path: "{{ hostpath }}"
    section: "{{ splunk_aws.hosts_group }}"
    option: "{{ item.public_ip }} {{ splunk_aws.hoststring }}"
    allow_no_value: true
  with_items: "{{ ec2.tagged_instances }}"
  when: ec2.changed

- name: Add the newly created Splunk EC2 Optimized instance(s) to hosts group
  ini_file:
    path: "{{ hostpath }}"
    section: "{{ splunk_aws.hosts_group }}"
    option: "{{ item.public_ip }} {{ splunk_aws.hoststring }}"
    allow_no_value: true
  with_items: "{{ ec2_iops.tagged_instances }}"
  when: ec2_iops.changed
